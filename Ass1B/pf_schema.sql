-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-09-13 13:00:42 AEST
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c

--   group: A04_Group092
--   members: Jinzhao Xu, Carl Goodwin

set echo on
SPOOL pf_schema_output.txt


DROP TABLE animal CASCADE CONSTRAINTS;

DROP TABLE animal_type CASCADE CONSTRAINTS;

DROP TABLE clinic CASCADE CONSTRAINTS;

DROP TABLE drug CASCADE CONSTRAINTS;

DROP TABLE owner CASCADE CONSTRAINTS;

DROP TABLE service CASCADE CONSTRAINTS;

DROP TABLE specialisation CASCADE CONSTRAINTS;

DROP TABLE training CASCADE CONSTRAINTS;

DROP TABLE vet CASCADE CONSTRAINTS;

DROP TABLE vet_training CASCADE CONSTRAINTS;

DROP TABLE visit CASCADE CONSTRAINTS;

DROP TABLE visit_drug CASCADE CONSTRAINTS;

DROP TABLE visit_service CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE animal (
    animal_id         NUMBER(3) NOT NULL,
    animal_name       VARCHAR2(10) NOT NULL,
    animal_birth_year NUMBER(4) NOT NULL,
    animal_status     CHAR(1) DEFAULT 'A' NOT NULL,
    owner_id          NUMBER(3) NOT NULL,
    animal_type_id    NUMBER(3) NOT NULL
);

ALTER TABLE animal
    ADD CHECK ( animal_status IN ( 'A', 'D' ) );

COMMENT ON COLUMN animal.animal_id IS
    'pet''s identifier';

COMMENT ON COLUMN animal.animal_name IS
    'pet''s name';

COMMENT ON COLUMN animal.animal_birth_year IS
    'pet''s year of birth (only record year)';

COMMENT ON COLUMN animal.animal_status IS
    'recording a animal is alive or not, A for alive, D for dead';

COMMENT ON COLUMN animal.owner_id IS
    'owner identifier';

COMMENT ON COLUMN animal.animal_type_id IS
    'animal type indentifier';

ALTER TABLE animal ADD CONSTRAINT pet_pk PRIMARY KEY ( animal_id );

CREATE TABLE animal_type (
    animal_type_id   NUMBER(3) NOT NULL,
    animal_type_name VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN animal_type.animal_type_id IS
    'animal type indentifier';

COMMENT ON COLUMN animal_type.animal_type_name IS
    'the name of a animal type';

ALTER TABLE animal_type ADD CONSTRAINT animal_type_pk PRIMARY KEY ( animal_type_id );

CREATE TABLE clinic (
    clinic_id      NUMBER(2) NOT NULL,
    clinic_name    VARCHAR2(20) NOT NULL,
    clinic_address VARCHAR2(50) NOT NULL,
    clinic_ph_no   NUMBER(10) NOT NULL,
    vet_id         NUMBER(2) NOT NULL
);

COMMENT ON COLUMN clinic.clinic_id IS
    'clinic identifier';

COMMENT ON COLUMN clinic.clinic_name IS
    'clinic name';

COMMENT ON COLUMN clinic.clinic_address IS
    'clinic address';

COMMENT ON COLUMN clinic.clinic_ph_no IS
    'clinic phone number';

COMMENT ON COLUMN clinic.vet_id IS
    'vet identifier';

CREATE UNIQUE INDEX clinic__idx ON
    clinic (
        vet_id
    ASC );

ALTER TABLE clinic ADD CONSTRAINT clinic_pk PRIMARY KEY ( clinic_id );

CREATE TABLE drug (
    drug_id                NUMBER(3) NOT NULL,
    drug_name              VARCHAR2(30) NOT NULL,
    drug_usage_instruction VARCHAR2(100) NOT NULL,
    drug_standard_charge   NUMBER(5, 2) NOT NULL
);

COMMENT ON COLUMN drug.drug_id IS
    'drug''s indentifier';

COMMENT ON COLUMN drug.drug_name IS
    'drug''s name';

COMMENT ON COLUMN drug.drug_usage_instruction IS
    'use instruction of a drug';

COMMENT ON COLUMN drug.drug_standard_charge IS
    'the standard charge of drug';

ALTER TABLE drug ADD CONSTRAINT drug_pk PRIMARY KEY ( drug_id );

CREATE TABLE owner (
    owner_id         NUMBER(3) NOT NULL,
    owner_given_name VARCHAR2(20) NOT NULL,
    owner_first_name VARCHAR2(20) NOT NULL,
    owner_ph_no      NUMBER(10)
);

COMMENT ON COLUMN owner.owner_id IS
    'owner identifier';

COMMENT ON COLUMN owner.owner_given_name IS
    'owner''s given name';

COMMENT ON COLUMN owner.owner_first_name IS
    'owner''s family name';

COMMENT ON COLUMN owner.owner_ph_no IS
    'owner''s phone number';

ALTER TABLE owner ADD CONSTRAINT petowner_pk PRIMARY KEY ( owner_id );

CREATE TABLE service (
    service_code            CHAR(5) NOT NULL,
    service_description     VARCHAR2(100) NOT NULL,
    service_standard_charge NUMBER(5, 2) NOT NULL
);

COMMENT ON COLUMN service.service_code IS
    'service identifier';

COMMENT ON COLUMN service.service_description IS
    'description of the service content';

COMMENT ON COLUMN service.service_standard_charge IS
    'the standard charge of service';

ALTER TABLE service ADD CONSTRAINT service_pk PRIMARY KEY ( service_code );

CREATE TABLE specialisation (
    special_id   NUMBER(3) NOT NULL,
    special_name VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN specialisation.special_id IS
    'specialisation indentifier';

COMMENT ON COLUMN specialisation.special_name IS
    'specialisation name';

ALTER TABLE specialisation ADD CONSTRAINT specialisation_pk PRIMARY KEY ( special_id )
;

CREATE TABLE training (
    training_id       NUMBER(3) NOT NULL,
    training_datetime DATE NOT NULL,
    vet_id            NUMBER(2) NOT NULL,
    training_duration NUMBER(3, 1) NOT NULL,
    training_title    VARCHAR2(50) NOT NULL,
    clinic_id         NUMBER(2) NOT NULL
);

COMMENT ON COLUMN training.training_id IS
    'training course identifier added as a surrogate key';

COMMENT ON COLUMN training.training_datetime IS
    'the date and time when a training was conducted';

COMMENT ON COLUMN training.vet_id IS
    'vet identifier';

COMMENT ON COLUMN training.training_duration IS
    'the time length of the training course';

COMMENT ON COLUMN training.training_title IS
    'the name of a training course';

COMMENT ON COLUMN training.clinic_id IS
    'clinic identifier';

ALTER TABLE training ADD CONSTRAINT training_pk PRIMARY KEY ( training_id,
                                                              clinic_id );

ALTER TABLE training ADD CONSTRAINT training_unique_key UNIQUE ( training_datetime,
                                                                 vet_id );

CREATE TABLE vet (
    vet_id          NUMBER(2) NOT NULL,
    vet_given_name  VARCHAR2(20),
    vet_family_name VARCHAR2(20) NOT NULL,
    vet_ph_number   NUMBER(10) NOT NULL,
    vet_emp_date    DATE NOT NULL,
    clinic_id       NUMBER(2) NOT NULL,
    special_id      NUMBER(3) NOT NULL
);

COMMENT ON COLUMN vet.vet_id IS
    'vet identifier';

COMMENT ON COLUMN vet.vet_given_name IS
    'vet''s given name, could be empty';

COMMENT ON COLUMN vet.vet_family_name IS
    'vet''s family name';

COMMENT ON COLUMN vet.vet_ph_number IS
    'vet''s phone number';

COMMENT ON COLUMN vet.vet_emp_date IS
    'the date when a vet was emplolyed';

COMMENT ON COLUMN vet.clinic_id IS
    'clinic identifier';

COMMENT ON COLUMN vet.special_id IS
    'specialisation indentifier';

ALTER TABLE vet ADD CONSTRAINT vet_pk PRIMARY KEY ( vet_id );

CREATE TABLE vet_training (
    training_id           NUMBER(3) NOT NULL,
    vet_training_competed CHAR(1) DEFAULT 'N' NOT NULL,
    vet_training_expiry   DATE,
    vet_id                NUMBER(2) NOT NULL,
    clinic_id             NUMBER(2) NOT NULL
);

ALTER TABLE vet_training
    ADD CHECK ( vet_training_competed IN ( 'N', 'Y' ) );

COMMENT ON COLUMN vet_training.training_id IS
    'training course identifier added as a surrogate key';

COMMENT ON COLUMN vet_training.vet_training_competed IS
    'suggesting the status of a training course, Y for completed, N for not completed'
    ;

COMMENT ON COLUMN vet_training.vet_training_expiry IS
    'the date of expiry of a training course';

COMMENT ON COLUMN vet_training.vet_id IS
    'vet identifier';

COMMENT ON COLUMN vet_training.clinic_id IS
    'clinic identifier';

ALTER TABLE vet_training ADD CONSTRAINT vet_training_pk PRIMARY KEY ( training_id,
                                                                      clinic_id );

CREATE TABLE visit (
    visit_datetime     DATE NOT NULL,
    vet_id             NUMBER(2) NOT NULL,
    visit_note         VARCHAR2(100) NOT NULL,
    visit_length       NUMBER(2, 1) NOT NULL,
    visit_weight       NUMBER(3, 1) NOT NULL,
    visit_total_cost   NUMBER(5, 2) NOT NULL,
    visit_pay_method   CHAR(4) NOT NULL,
    clinic_id          NUMBER(2) NOT NULL,
    animal_id          NUMBER(3) NOT NULL,
    pre_visit_datetime DATE,
    pre_vet_id         NUMBER(2),
    visit_datetime1    DATE,
    vet_id1            NUMBER(2),
    animal_id1         NUMBER(3),
    animal_id2         NUMBER(3)
);

COMMENT ON COLUMN visit.visit_datetime IS
    'the date and time when a visit is required';

COMMENT ON COLUMN visit.vet_id IS
    'vet identifier';

COMMENT ON COLUMN visit.visit_note IS
    'the note wrote by the vet during a visit';

COMMENT ON COLUMN visit.visit_length IS
    'the time length of a visit';

COMMENT ON COLUMN visit.visit_weight IS
    'the weight of pet which attend the visit';

COMMENT ON COLUMN visit.visit_total_cost IS
    'the total cost of a visit';

COMMENT ON COLUMN visit.visit_pay_method IS
    'the pay method of the total cost of a visit, CASH or EFT';

COMMENT ON COLUMN visit.clinic_id IS
    'clinic identifier';

COMMENT ON COLUMN visit.animal_id IS
    'pet''s identifier';

COMMENT ON COLUMN visit.pre_visit_datetime IS
    'the date and time when a visit is required';

COMMENT ON COLUMN visit.pre_vet_id IS
    'vet identifier';

COMMENT ON COLUMN visit.visit_datetime1 IS
    'the date and time when a visit is required';

COMMENT ON COLUMN visit.vet_id1 IS
    'vet identifier';

COMMENT ON COLUMN visit.animal_id1 IS
    'pet''s identifier';

COMMENT ON COLUMN visit.animal_id2 IS
    'pet''s identifier';

ALTER TABLE visit
    ADD CONSTRAINT visit_pk PRIMARY KEY ( visit_datetime,
                                          vet_id,
                                          animal_id );

CREATE TABLE visit_drug (
    visit_datetime         DATE NOT NULL,
    vet_id                 NUMBER(2) NOT NULL,
    drug_id                NUMBER(3) NOT NULL,
    visit_drug_dose        NUMBER(6, 2) NOT NULL,
    visit_drug_frequency   VARCHAR2(20) NOT NULL,
    visit_drug_qtysupplied NUMBER(3, 1) NOT NULL,
    visit_drug_linecost    NUMBER(4, 2) NOT NULL,
    animal_id              NUMBER(3) NOT NULL
);

COMMENT ON COLUMN visit_drug.visit_datetime IS
    'the date and time when a visit is required';

COMMENT ON COLUMN visit_drug.vet_id IS
    'vet identifier';

COMMENT ON COLUMN visit_drug.drug_id IS
    'drug''s indentifier';

COMMENT ON COLUMN visit_drug.visit_drug_dose IS
    'the dose of drug used in a visit';

COMMENT ON COLUMN visit_drug.visit_drug_frequency IS
    'the frequency of drug usage';

COMMENT ON COLUMN visit_drug.visit_drug_qtysupplied IS
    'the quantity supplied of drug during a visit';

COMMENT ON COLUMN visit_drug.visit_drug_linecost IS
    'the line cost of drug in a visit';

COMMENT ON COLUMN visit_drug.animal_id IS
    'pet''s identifier';

ALTER TABLE visit_drug
    ADD CONSTRAINT visit_drug_pk PRIMARY KEY ( visit_datetime,
                                               vet_id,
                                               animal_id,
                                               drug_id );

CREATE TABLE visit_service (
    service_code           CHAR(5) NOT NULL,
    visit_datetime         DATE NOT NULL,
    vet_id                 NUMBER(2) NOT NULL,
    visit_service_linecost NUMBER(5, 2) NOT NULL,
    animal_id              NUMBER(3) NOT NULL
);

COMMENT ON COLUMN visit_service.service_code IS
    'service identifier';

COMMENT ON COLUMN visit_service.visit_datetime IS
    'the date and time when a visit is required';

COMMENT ON COLUMN visit_service.vet_id IS
    'vet identifier';

COMMENT ON COLUMN visit_service.visit_service_linecost IS
    'the line cost of the service in a visit';

COMMENT ON COLUMN visit_service.animal_id IS
    'pet''s identifier';

ALTER TABLE visit_service
    ADD CONSTRAINT visit_service_pk PRIMARY KEY ( service_code,
                                                  visit_datetime,
                                                  vet_id,
                                                  animal_id );

ALTER TABLE animal
    ADD CONSTRAINT animal_type_animal FOREIGN KEY ( animal_type_id )
        REFERENCES animal_type ( animal_type_id );

ALTER TABLE training
    ADD CONSTRAINT clinic_training FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE vet
    ADD CONSTRAINT clinic_vet FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE visit
    ADD CONSTRAINT clinic_visit FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE visit_drug
    ADD CONSTRAINT drug_visit_drug FOREIGN KEY ( drug_id )
        REFERENCES drug ( drug_id );

ALTER TABLE visit
    ADD CONSTRAINT pet_visit FOREIGN KEY ( animal_id )
        REFERENCES animal ( animal_id );

ALTER TABLE animal
    ADD CONSTRAINT petowner_pet FOREIGN KEY ( owner_id )
        REFERENCES owner ( owner_id );

ALTER TABLE visit_service
    ADD CONSTRAINT service_visit_service FOREIGN KEY ( service_code )
        REFERENCES service ( service_code );

ALTER TABLE vet
    ADD CONSTRAINT specialisation_vet FOREIGN KEY ( special_id )
        REFERENCES specialisation ( special_id );

ALTER TABLE vet_training
    ADD CONSTRAINT training_vet_training FOREIGN KEY ( training_id,
                                                       clinic_id )
        REFERENCES training ( training_id,
                              clinic_id );

ALTER TABLE clinic
    ADD CONSTRAINT vet_clinic FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE training
    ADD CONSTRAINT vet_training FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE vet_training
    ADD CONSTRAINT vet_vet_training FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE visit
    ADD CONSTRAINT vet_visit FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE visit
    ADD CONSTRAINT visit_visit FOREIGN KEY ( visit_datetime1,
                                             vet_id1,
                                             animal_id2 )
        REFERENCES visit ( visit_datetime,
                           vet_id,
                           animal_id );

ALTER TABLE visit_drug
    ADD CONSTRAINT visit_visit_drug FOREIGN KEY ( visit_datetime,
                                                  vet_id,
                                                  animal_id )
        REFERENCES visit ( visit_datetime,
                           vet_id,
                           animal_id );

ALTER TABLE visit_service
    ADD CONSTRAINT visit_visit_service FOREIGN KEY ( visit_datetime,
                                                     vet_id,
                                                     animal_id )
        REFERENCES visit ( visit_datetime,
                           vet_id,
                           animal_id );

ALTER TABLE visit
    ADD CONSTRAINT visit_visitv1 FOREIGN KEY ( pre_visit_datetime,
                                               pre_vet_id,
                                               animal_id1 )
        REFERENCES visit ( visit_datetime,
                           vet_id,
                           animal_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            13
-- CREATE INDEX                             1
-- ALTER TABLE                             34
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0


SPOOL off
set echo off